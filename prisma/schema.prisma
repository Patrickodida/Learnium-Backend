// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(STUDENT)
  courses   Course[] @relation("InstructorCourses")
  enrollments Enrollment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  STUDENT
  INSTRUCTOR
  ADMIN
}

model Course {
  id          String       @id @default(uuid())
  title       String
  description String
  thumbnail   String
  price       Float
  published   Boolean      @default(false)
  instructor  User         @relation("InstructorCourses", fields: [instructorId], references: [id])
  instructorId String
  lessons     Lesson[]
  enrollments Enrollment[]
  createdAt   DateTime     @default(now())
  updatedAt DateTime @updatedAt
  @@index([instructorId])
}

model Lesson {
  id        String   @id @default(uuid())
  title     String
  videoUrl  String
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([courseId])
}

model Enrollment {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  completedLessons String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([userId, courseId])
  @@index([userId])
  @@index([courseId])
}

